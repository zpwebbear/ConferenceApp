@page "/participants"
@using ConferenceApp.Services
@inject IParticipantService ParticipantService
@inject NavigationManager NavigationManager
@inject ParticipantRazorService ParticipantRazorService
@implements IDisposable

<h2>PARTICIPANTS</h2>

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Full Name</th>
            <th scope="col">Email</th>
            <th scope="col">Company</th>
            <th scope="col">Position</th>
            <th scope="col">Registration Date</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var participant in ParticipantRazorService.Participants)
        {
            <tr @onclick="()=>GoToParticipant(participant.ID)" style="cursor: pointer">
                <td>@participant.ID</td>
                <td>@(participant.FirstName + ' ' + @participant.LastName)</td>
                <td>@participant.Email</td>
                <td>@participant.CompanyName</td>
                <td>@participant.PositionInCompany</td>
                <td>@participant.Inserted</td>
                <td><span class="badge badge-primary">New</span></td>
            </tr>
        }
    </tbody>
</table>


<Pagination GoToPage="ChangePage" totalPages="@ParticipantRazorService.TotalPages" currentPage="@ParticipantRazorService.CurrentPage" />

@code {

    protected override void OnInitialized()
    {
        ParticipantRazorService.OnChange += StateHasChanged;
        ParticipantRazorService.ParseQueryString();
        ParticipantRazorService.FetchParticipants(null);
    }

    public void ChangePage(int page)
    {
        ParticipantRazorService.FetchParticipants(page);
    }

    public void GoToParticipant(int ParticipantID)
    {
        NavigationManager.NavigateTo($"/participants/{ParticipantID}");
    }

    public void Dispose()
    {
        ParticipantRazorService.OnChange -= StateHasChanged;
    }
}
